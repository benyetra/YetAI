"""Add username field to users table

Revision ID: 1cfb8dd64dbd
Revises: ed8098e2bdd1
Create Date: 2025-08-19 10:18:10.170524

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "1cfb8dd64dbd"
down_revision: Union[str, Sequence[str], None] = "ed8098e2bdd1"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    from sqlalchemy import text

    # First add the column as nullable
    op.add_column("users", sa.Column("username", sa.String(length=50), nullable=True))

    # Populate existing users with temporary usernames based on email prefix
    connection = op.get_bind()

    # Generate usernames for existing users
    connection.execute(
        text(
            """
        UPDATE users 
        SET username = 'user_' || id 
        WHERE username IS NULL
    """
        )
    )

    # Now make the column not nullable and add unique constraint
    op.alter_column("users", "username", nullable=False)
    op.create_index(op.f("ix_users_username"), "users", ["username"], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_users_username"), table_name="users")
    op.drop_column("users", "username")
    # ### end Alembic commands ###
